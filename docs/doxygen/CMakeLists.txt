
# Path to doxygen input
set(doxyfile_in doxyfile.in)

# Set project variables
set(doxyfile     ${CMAKE_CURRENT_BINARY_DIR}/doxyfile)
set(doxyfile_hhp ${CMAKE_CURRENT_BINARY_DIR}/html/index.hhp)

# Check if doxygen is available
find_package(Doxygen)
if(NOT DOXYGEN_FOUND)
    message(STATUS "Disabled generation of doxygen documentation (missing doxygen).")
    return()
endif()

# Get filename and path of doxyfile
get_filename_component(name ${doxyfile_in} NAME)
get_filename_component(path ${doxyfile_in} PATH)
if(NOT path)
    set(path ${CMAKE_CURRENT_SOURCE_DIR})
endif()

# Configure doxyfile (if it is a real doxyfile already, it should simply copy the file)
set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
configure_file(${doxyfile_in} ${doxyfile})

set(DOXYGEN_INCLUDE_DIRS
    ${PROJECT_SOURCE_DIR}/src
    ${PROJECT_SOURCE_DIR}/include
    ${PROJECT_BINARY_DIR}/src
)

# Invoke doxygen
add_custom_command(
    OUTPUT              ${doxyfile_hhp}
    DEPENDS             ${doxyfile}
    WORKING_DIRECTORY   ${path}
    COMMAND             ${CMAKE_COMMAND} -E copy_directory ${path} ${CMAKE_CURRENT_BINARY_DIR}/html
    COMMAND             ${DOXYGEN} \"${doxyfile}\"
    COMMENT             "Creating doxygen documentation."
)

# Declare target
add_custom_target(docs-doxygen DEPENDS ${doxyfile_hhp})
set_target_properties(docs-doxygen
    PROPERTIES
    EXCLUDE_FROM_DEFAULT_BUILD      1
)

set(DOXYGEN_OUTPUT_HTML "${CMAKE_CURRENT_BINARY_DIR}/html/index.html")
if (WIN32 AND NOT CYGWIN)
    set(DOXYGEN_OPEN_CMD ${DOXYGEN_OUTPUT_HTML})
else()
    set(DOXYGEN_OPEN_CMD xdg-open ${DOXYGEN_OUTPUT_HTML})
endif()

add_custom_target(docs-doxygen-show DEPENDS docs-doxygen
    COMMAND             ${DOXYGEN_OPEN_CMD}
)
set_target_properties(docs-doxygen-show
    PROPERTIES
    EXCLUDE_FROM_DEFAULT_BUILD      1
)
